###############################################################################
#
#  Welcome to Baml! To use this generated code, please run the following:
#
#  $ pip install baml-py
#
###############################################################################

# This file was generated by BAML: please do not edit it. Instead, edit the
# BAML files and re-generate this code.
#
# ruff: noqa: E501,F401
# flake8: noqa: E501,F401
# pylint: disable=unused-import,line-too-long
# fmt: off
import baml_py
from enum import Enum

from pydantic import BaseModel, ConfigDict

from typing_extensions import TypeAlias, Literal
from typing import Dict, Generic, List, Optional, TypeVar, Union

from . import types
from .types import Checked, Check

###############################################################################
#
#  These types are used for streaming, for when an instance of a type
#  is still being built up and any of its fields is not yet fully available.
#
###############################################################################

T = TypeVar('T')
class StreamState(BaseModel, Generic[T]):
    value: T
    state: Literal["Pending", "Incomplete", "Complete"]


class EmailAnalysis(BaseModel):
    summary: Optional[str] = None
    key_points: List[str]
    sentiment: Optional[Union[Literal["positive"], Literal["neutral"], Literal["negative"]]] = None
    urgency: Optional[Union[Literal["low"], Literal["medium"], Literal["high"]]] = None
    requires_response: Optional[bool] = None
    suggested_actions: List[str]

class EmailResponse(BaseModel):
    tone: Optional[Union[Literal["professional"], Literal["casual"], Literal["friendly"], Literal["formal"]]] = None
    content: Optional[str] = None
    subject: Optional[str] = None

class EmailSummary(BaseModel):
    id: Optional[str] = None
    sender: Optional[str] = None
    subject: Optional[str] = None
    date: Optional[str] = None
    snippet: Optional[str] = None
    importance: Optional[Union[Literal["low"], Literal["medium"], Literal["high"]]] = None
    category: Optional[Union[Literal["work"], Literal["personal"], Literal["promotional"], Literal["social"], Literal["updates"], Literal["spam"]]] = None
    action_needed: Optional[bool] = None
    deadline: Optional[str] = None

class Resume(BaseModel):
    name: Optional[str] = None
    email: Optional[str] = None
    experience: List[str]
    skills: List[str]
